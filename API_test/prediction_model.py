# -*- coding: utf-8 -*-
"""crypto_prediction 2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1gaNt7wc7lx34kKmACbU5lmrDuBel4Lx4
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from matplotlib import style
import datetime as dt 
from keras.models import load_model
from sklearn.preprocessing import MinMaxScaler
from tensorflow.keras.layers import Dense ,Dropout, LSTM
from tensorflow.keras.models import Sequential
#!pip install yfinance
import yfinance as yf


start = dt.datetime(2020,1,1) 
end = dt.datetime.now()
Crypto_currency = "BTC"
Real_currency = "USD"

BTC_USD = yf.Ticker(f"{Crypto_currency}-{Real_currency}")
Data = BTC_USD.history(start=start, end=end)
print(Data)
def preprocess_data(data) :
    scaler = MinMaxScaler(feature_range=(0,1))
    scaled_data = scaler.fit_transform(data["Close"].values.reshape(-1,1))
    prediction_days = 60
    x_train,y_train = [], []
    for x in range(prediction_days, len(scaled_data)):
      x_train.append(scaled_data[x - prediction_days : x,0])
      y_train.append(scaled_data[x,0])

    x_train,y_train = np.array(x_train) , np.array(y_train)
    x_train = np.reshape(x_train , (x_train.shape[0], x_train.shape[1], 1))
    return x_train , y_train
x_train , y_train = preprocess_data(Data)
def predict_data():
  model = load_model("model.h5")
  predicted_value = model.predict(x_train)
  return predicted_value.reshape(1,predicted_value.shape[0])
array = predict_data()
print(array.shape)